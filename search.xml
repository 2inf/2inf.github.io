<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Tikz入门]]></title>
    <url>%2F2019%2F08%2F12%2FTikz%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[POJ1845 Sumdiv]]></title>
    <url>%2F2019%2F07%2F17%2FPOJ1845%20Sumdiv%2F</url>
    <content type="text"><![CDATA[\(Sumdiv\) 题意: 求\(A^B\)的所有约数之和\(mod9901\left(1\leq A,B \leq5*10^7\right)\) 分析: A分解质因数为\(p_1^{c_1}\times p_2^{c_2}\times\cdots\times p_n^{c_n}\)。那么\(A^B\)表示为\(p_1^{Bc_1}\times p_2^{Bc_2}\times\cdots\times p_n^{Bc_n}\)。\(A^B\)的所有约数表示为集合\(\{p_1^{k_1}\times p_2^{k_2}\times\cdots\times p_n^{k_n}\}\)，其中\(0\leq k_i \leq B\times c_i\left(1\leq i \leq n\right)\) 由乘法分配律, \(A^B\)的所有约数之和为: \[\left(1+p_1+\cdots+p_1^{B*c_1}\right)*\left(1+p_2+\cdots+p_2^{B*c_2}\right)*\cdots\\*\left(1+p_n+\cdots+p_n^{B*c_n}\right)=\prod_{i=1}^n\left(\sum_{j=0}^{B*c_i}\left(p_i\right)^j\right)\] 括号内为等比数列，直接使用求和公式，需要做除法。答案还需对9901取模，mod运算只对加、减、乘有分配律，不能对分子分母取模后做除法，换一种思路，用分治法对等比数列求和。 用分治法求\(\displaystyle\sum_{i=1}^cp^i\quad\text{若c为奇数:}\) \[\sum_{i=1}^cp^i=\left(1+p+\cdots+p^\frac{c-1}{2}\right)+\left(p^\frac{c+1}{2}+\cdots+p^c\right)\\=\left(1+p+\cdots+p^\frac{c-1}{2}\right)+p^\frac{c+1}{2}*\left(1+p+\cdots+p^\frac{c-1}{2}\right)\\=(1+p^\frac{c+1}{2})*\sum_{i=1}^\frac{c+1}{2}p^i\] 若c为偶数，类似有: \[\sum_{i=1}^cp^i=(1+p^\frac{c}{2})*\sum_{i=1}^{\frac{c}{2}-1}p^i+p^c\] 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;#define ll long longconst ll N = 1005, MOD = 9901;pair&lt;ll, ll&gt; fac[N];ll cnt = 0;ll qpow(ll a, ll b)&#123; ll res = 1; for (; b; b &gt;&gt;= 1, a = a * a % MOD) if (b &amp; 1) res = res * a % MOD; return res;&#125;ll sum(ll p, ll c)&#123; if (!c) return 1; if (c &amp; 1) return (qpow(p, (c + 1) / 2) + 1) * sum(p, c / 2) % MOD; return ((qpow(p, c / 2) + 1) * sum(p, c / 2 - 1) + qpow(p, c)) % MOD;&#125;void divide(ll n)&#123; for (ll i = 2; i * i &lt;= n; ++i) &#123; if (n % i == 0) &#123; ll num = 0; while (n % i == 0) &#123; num++; n /= i; &#125; fac[++cnt] = make_pair(i, num); &#125; &#125; if (n &gt; 1) fac[++cnt] = make_pair(n, 1);&#125;int main()&#123; ll a, b; scanf("%lld%lld", &amp;a, &amp;b); divide(a); ll ans = 1; for (ll i = 1; i &lt;= cnt; ++i) &#123; ll p = fac[i].first, c = fac[i].second; ans = ans * sum(p, b * c) % MOD; &#125; printf("%lld\n", ans); return 0;&#125;]]></content>
      <tags>
        <tag>基础-分治</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数学分析-极限]]></title>
    <url>%2F2019%2F07%2F12%2F%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90-%E6%9E%81%E9%99%90%2F</url>
    <content type="text"><![CDATA[本章主要提供一些题目复习，但出于节省时间考虑，不附以解答，若需要个别题目解答可联系\(qq: 2247389338\) 设数列\(\{a_n\}\)满足条件\(0 &lt; a_1 &lt; 1\)和 \(a_{n+1}=a_n(1-a_n)\ (n\geq1)\), 证明: \(\lim na_n=1\) 若\(\displaystyle\lim_{n\to\infty}a_n=\alpha\), \(\displaystyle\lim_{n\to\infty}b_n=\beta\), 证明: \(\displaystyle\lim_{n\to\infty}\frac{a_1b_n+a_2b_{n-1}+\cdots+a_nb_1}{n}=\alpha\beta\) \((1)\displaystyle\lim_{n\to\infty}\frac{1^k+2^k+\cdots+n^k}{n^{k+1}}=\frac{1}{k+1}\\ (2)\displaystyle\lim_{n\to\infty}\left(\frac{1^k+2^k+\cdots+n^k}{n^k}-\frac{n}{k+1}\right)=\frac{1}{2}\) 设\(A_n=\sum\limits_{k=1}^{n}\frac{n}{n^2+k^2}\),求\(\lim\limits_{n\to\infty}n\left(\frac{\pi}{4}-A_n\right)\). 解:令\(f(x)=\frac{1}{1+x^2},\)因为\(A_n=\frac{1}{n}\sum\limits_{i=1}^{n}\frac{1}{1+\frac{i^2}{n^2}},\)所以 \[\lim_{n\to\infty}A_n=\int_{0}^{1}f(x)dx=\frac{\pi}{4}\] 记\(x_i=\frac{i}{n}\),则\(x_i-x_{i-1}=\frac{1}{n},A_n=n\sum\limits_{i=1}^{n}\int_{x_{i-1}}^{x_i}f(x_i)dx.\) 令 \[J_n=n\left(\frac{\pi}{4}-A_n\right)=n\sum\limits_{i=1}^{n}\int_{x_{i-1}}^{x_i}\left[f(x)-f(x_i)\right]dx,\] 由拉格朗日中值定理，\(\exists\xi_i\in(x_{i-1},x_i)\) 使得 \[J_n=n\left(\frac{\pi}{4}-A_n\right)=n\sum\limits_{i=1}^{n}\int_{x_{i-1}}^{x_i}f&#39;(\xi_i)\left(x-x_i\right)dx.\] 记\(m_i,M_i\)分别是\(f&#39;(x)\)在\(\left[x_{i-1},x_i\right]\)上的最大值和最小值,则\(m_i\leq f&#39;(\xi_i)\leq M_i\), 积分\(\int_{x_{i-1}}^{x_i}f&#39;(\xi_i)\left(x-x_i\right)dx\)介于\(m_i\int_{x_{i-1}}^{x_i}\left(x-x_i\right)dx,M_i\int_{x_{i-1}}^{x_i}\left(x-x_i\right)dx\)之间,由介值定理 \[\exists\eta_i\in\left(x_{i-1},x_i\right),\int_{x_{i-1}}^{x_i}f&#39;(\xi_i)\left(x-x_i\right)dx=-f&#39;(\eta_i)\frac{\left(x_i-x_{i-1}\right)^2}{2}.\] 于是有\(J_n=-\frac{n}{2}\sum\limits_{i=1}^{n}f&#39;(\eta_i)\left(x_i-x_{i-1}\right)^2=-\frac{1}{2n}\sum\limits_{i=1}^{n}f&#39;(\eta_i).\) 从而 \[\lim_{n\to\infty}n\left(\frac{\pi}{4}-A_n\right)=\lim_{n\to\infty}J_n=-\frac{1}{2}\int_{0}^{1}f&#39;(x)dx=-\frac{1}{2}\left[f\left(1\right)-f\left(0\right)\right]=\frac{1}{4}.\]]]></content>
  </entry>
  <entry>
    <title><![CDATA[Python简易网络爬虫]]></title>
    <url>%2F2019%2F04%2F27%2FPython%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[上大学后自学了点爬虫, 下面是我个人的学习总结 ## 正则表达式 #### 基本概念 &gt;正则表达式(regular expression)，又称规则表达式。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。 #### 正则表达式的语法 正则表达式语法由字符和操作符构成 正则表达式的常用操作符 操作符 说明 实例 . 表示任何单个字符 [ ] 字符集, 对单个字符给出取值范围 [abc]表示a、b、c, [a-z]表示a到z单个字符 [^ ] 非字符集, 对单个字符给出排除范围 [^abc]表示非a或b或c的单个字符 * 前一个字符0次或无限次扩展 abc*表示ab、abc、abcc、abccc等 + 前一个字符1次或无限次扩展 abc+表示abc、abcc、abccc等 ? 前一个字符0次或1次扩展 abc?表示ab、abc | 左右表达式任意一个 abc|def表示abc、def {m} 扩展前一个字符m次 ab{2}c表示abbc {m,n} 扩展前一个字符m至n次(含n) ab{1,2}表示abc、abbc ^ 匹配字符串开头 ^abc表示abc且在一个字符串的开头 $ 匹配字符串结尾 abc&amp;表示abc且在一个字符串的结尾 ( ) 分组标记, 内部只能使用|操作符 (abc)表示abc、(abc|def)表示abc、def 数字, 等价于[0-9] 非数字字符, 等价于[^0-9] 单词字符(包括下划线), 等价于[A-Za-z0-9_] 非单词字符, 等价于[^A-Za-z0-9_] 空白字符, 等价于[ 非空白字符, 等价于[^\f\n\r\t\v] Re库默认采用贪婪匹配, 即输出匹配最长的子串 最小匹配操作符 操作符 说明 *? 前1个字符0次或无限次扩展 +? 前1个字符1次或无限次扩展 ?? 前1个字符0次或1次扩展 {m,n}? 扩展前1个字符m次至n次 始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。 表达式 意义 1+\(&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;由26个字母组成的字符串&lt;/center&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;center&gt;^[A-Za-z0-9]+\) 由26个字母和数字组成的字符串 ^-?\(&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;整数形式的字符串&lt;/center&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;center&gt;^[0-9]\*[1-9][0-9]*\) 正整数形式的字符串 [1-9] 中国境内邮政编码, 6位 [ A-Za-z↩︎]]></content>
  </entry>
  <entry>
    <title><![CDATA[部分写作知识点小结]]></title>
    <url>%2F2019%2F01%2F03%2F%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E5%B0%8F%E7%BB%93%2F</url>
    <content type="text"><![CDATA[本文将主要介绍一些关于博客写作的小知识点(防遗忘) 水的一篇好文 ## Markdown Markdown教程现在已经烂大街了，在这里主要是作为备忘录进行查阅。 公式 插入公式与代码分别是用$与 ` 符号(～键)包裹所写部分 在需要高亮的代码块的前一行及后一行使用三个反引号。 同时第一行反引号后面，写代码块所使用的语言。 使用 \left和 \right来创建自动匹配高度的 ()，[] 和 {} 。 在每个公式末尾前使用\tag{行标}来实现行标。 希腊字母 显示 大写 命令 显示 大写 命令 \(\alpha\) \(\rm{A}\) $\alpha$ \(\beta\) \(\rm{B}\) $\beta$ \(\gamma\) \(\Gamma\) $\gamma$ \(\delta\) \(\Delta\) $\delta$ \(\epsilon\) \(\rm{E}\) $\epsilon$ \(\zeta\) \(\rm{Z}\) $\zeta$ \(\eta\) \(\rm{H}\) $\eta$ \(\theta\) \(\Theta\) $\theta$ \(\iota\) \(\rm{I}\) $\iota$ \(\kappa\) \(\rm{K}\) $\kappa$ \(\lambda\) \(\Lambda\) $\lambda$ \(\mu\) \(\rm{M}\) $\mu$ \(\nu\) \(\rm{N}\) $\nu$ \(\xi\) \(\Xi\) $\xi$ \(\pi\) \(\Pi\) $\pi$ \(\rho\) \(\rm{R}\) $\rho$ \(\sigma\) \(\Sigma\) $\sigma$ \(\tau\) \(\rm{T}\) $\tau$ \(\upsilon\) \(\Upsilon\) $\upsilon$ \(\phi\) \(\Phi\) $\phi$ \(\chi\) \(\rm{X}\) $\chi$ \(\psi\) \(\Psi\) $\psi$ \(\omega\) \(\Omega\) $\omega$ :只需将命令的首字母大写即可得大写希腊字母，在命令前加上var前缀即可得到斜体希腊字母如: \(\Gamma\phi\) &amp; \(\varGamma\varphi​\) 1$\Gamma\phi$ &amp; $\varGamma\varphi​$ 运算 命令 显示 命令 显示 $\pm$ \(\pm\) $\mp$ \(\mp\) $\neq$ \(\neq\) $\times$ \(\times\) $\div$ \(\div\) $\leq$ \(\leq\) $\geq$ \(\geq\) $\ngeq$ \(\ngeq\) $\ast$ \(\ast\) $\approx$ \(\approx\) $\equiv$ \(\equiv\) $bigcup$ \(\bigcup\) $\iint$ \(\iint\) $\iiint$ \(\iiint\) $\oint$ \(\oint\) $\mid$ \(\mid\) $\because$ \(\because\) \therefore \(\therefore\) 特殊符号 显示 命令 显示 命令 \(\infty\) $\infty$ \(\cup\) $\cup$ \(\cap\) $\cap$ \(\subset\) $\subset$ \(\subseteq\) $\subseteq$ \(\supset\) $\supset$ \(\in\) $\in$ \(\notin\) $\notin$ \(\varnothing\) $\varnothing$ \(\forall\) $\forall$ \(\exists\) $\exists$ \(\lnot\) $\lnot$ \(\nabla\) $\nabla$ \(\partial\) $\partial$ \(\angle\) $\angle$ \(\bot\) $\bot$ \(\bigodot\) $\bigodot$ \(\bigotimes\) $\bigotimes$ 空格 $\,$ \(\frac{1}{6}\)m宽度 $\;$ \(\frac{2}{7}\)m宽度 $\$ \(\frac{1}{3}\)m宽度 $\quad$ m宽度 $\qquad$ 2m宽度 #### 表情 | syntax | preview | syntax | preview | | :--: | :----: | :--: | :----: | |:sun_with_face:|🌞|:smile:|😄| |:laughing:|😆|:blush:|😊| |:smiley:|😃|:relaxed:|☺️| |:smirk:|😏|:heart_eyes:|😍| |:kissing_heart:|😘|:kissing_closed_eyes:|😚| |:flushed:|😳|:relieved:|😌| |:satisfied:|😆|:grin:|😁| |:wink:|😉|:stuck_out_tongue_winking_eye:|😜| |:stuck_out_tongue_closed_eyes:|😝|:grinning:|😀| |:kissing:|😗|:kissing_smiling_eyes:|😙| |:stuck_out_tongue:|😛|:sleeping:|😴 |:worried:|😟|:frowning:|😦| |:anguished:|😧|:open_mouth:|😮 |:confused:|😕|:hushed:|😯| |:expressionless:|😑|:unamused:|😒| |:sweat_smile:|😅|:sweat:|😓| #### 矢量与箭头 命令 显示 命令 显示 $\vec{a}$ \(\vec{a}\) $\bar{s}$ \(\bar{s}\) (平均值) $\rightarrow$ \(\rightarrow\) $\Rightarrow$ \(\Rightarrow\) $\overrightarrow{a}$ \(\overrightarrow{a}\) $\overleftrightarrow{a}$ \(\overleftrightarrow{a}\) $\overleftarrow{a}$ \(\overleftarrow{a}\) $\longrightarrow$ \(\longrightarrow\) $\overline{a+b}$ \(\overline{a+b}\) $\underline{a+b}$ \(\underline{a+b}\) $\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}$ \(\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}\) $\hat{y}$ \(\hat{y}\) 矩阵与方程组 pmatrix:$\begin{pmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{pmatrix}$ : ![ \[\begin{pmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{pmatrix}\] ](https://math.jianshu.com/math?formula=%5Cbegin%7Bpmatrix%7D1%20%26%202%20%5C%5C%203%20%26%204%5C%5C%20%5Cend%7Bpmatrix%7D) bmatrix:$\begin{bmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{bmatrix}$ : ![ \[\begin{bmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{bmatrix}\] ](https://math.jianshu.com/math?formula=%5Cbegin%7Bbmatrix%7D1%20%26%202%20%5C%5C%203%20%26%204%5C%5C%20%5Cend%7Bbmatrix%7D) Bmatrix:$\begin{Bmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{Bmatrix}$ : ![ \[\begin{Bmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{Bmatrix}\] ](https://math.jianshu.com/math?formula=%5Cbegin%7BBmatrix%7D1%20%26%202%20%5C%5C%203%20%26%204%5C%5C%20%5Cend%7BBmatrix%7D) vmatrix:$\begin{vmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{vmatrix}$ : ![ \[\begin{vmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{vmatrix}\] ](https://math.jianshu.com/math?formula=%5Cbegin%7Bvmatrix%7D1%20%26%202%20%5C%5C%203%20%26%204%5C%5C%20%5Cend%7Bvmatrix%7D) Vmatrix:$\begin{Vmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{Vmatrix}$ : ![ \[\begin{Vmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{Vmatrix}\] ](https://math.jianshu.com/math?formula=%5Cbegin%7BVmatrix%7D1%20%26%202%20%5C%5C%203%20%26%204%5C%5C%20%5Cend%7BVmatrix%7D) 12345678910111213141516171819$$\begin&#123;matrix&#125;a_&#123;11&#125;&amp;a_&#123;12&#125;&amp;\cdots&amp;a_&#123;1n&#125;\\a_&#123;21&#125;&amp;a_&#123;21&#125;&amp;\cdots&amp;a_&#123;2n&#125;\\\vdots&amp;\vdots&amp;\ddots&amp;\vdots\\a_&#123;n1&#125;&amp;a_&#123;n2&#125;&amp;\cdots&amp;a_&#123;nn&#125;\\\end&#123;matrix&#125;$$(类似有\ldots底端对齐)$$\left\&#123;\begin&#123;array&#125;\a_1x + a_2y + a_3z = d_1 \\b_1x + b_2y + b_3z = d_2 \\\end&#123;array&#125;\right.$$(array亦可改为cases)$$\begin&#123;cases&#125; a_&#123;11&#125;x_1&amp;+&amp;a_&#123;12&#125;x_2&amp;+&amp;\cdots&amp;+a_&#123;1n&#125;x_n&amp;=&amp;b_1\\ &amp;&amp;&amp;&amp;\vdots\\ a_&#123;n1&#125;x_1&amp;+&amp;a_&#123;n2&#125;x_2&amp;+&amp;\cdots&amp;+a_&#123;nn&#125;x_n&amp;=&amp;b_n&amp; \end&#123;cases&#125;$$ \[\begin{matrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n}\\\ \ a_{21}&amp;a_{21}&amp;\cdots&amp;a_{2n}\\\ \ \vdots &amp; \vdots &amp; \ddots &amp; \vdots\\\ \ a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn}\\\ \end{matrix}\] \[\begin{cases} ​ a_{11}x_1&amp;+&amp;a_{12}x_2&amp;+&amp;\cdots&amp;+a_{1n}x_n&amp;=&amp;b_1\\\ &amp;&amp;&amp;&amp;\vdots\\\ a_{n1}x_1&amp;+&amp;a_{n2}x_2&amp;+&amp;\cdots&amp;+a_{nn}x_n&amp;=&amp;b_n&amp; \end{cases}\] 字体 输入 说明 实例 输入 说明 实例 $\rm{D}$ 罗马体 \(\rm{D}\) $\cal{D}$ 花体 \(\cal{D}\) $\it{D}$ 意大利体 \(\it{D}\) $\Bbb{D}$ 黑板粗体 \(\Bbb{D}\) $\bf{D}$ 粗体 \(\bf{D}\) $\mit{D}$ 数学斜体 \(\mit{D}\) $\sf{D}$ 等线体 \(\sf{D}\) $\scr{D}$ 手写体 \(\scr{D}\) $\tt{D}$ 打字机体 \(\tt{D}\) $\boldsymbol{D}$ 黑体 \(\boldsymbol{D}\) 标题 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 字体 1234**加粗文字** 对应 &lt;b&gt;加粗文字&lt;/b&gt; 及 &lt;strong&gt;加粗文字&lt;/strong&gt;*倾斜文字* 对应 &lt;i&gt;倾斜文字&lt;/i&gt; 及 &lt;em&gt;倾斜文字&lt;/em&gt;***斜体加粗文字*** ~~加删除线文字~~ 对应 &lt;del&gt;加删除线文字&lt;/del&gt; 引用 多个&gt;用于逐层嵌套 12&gt;引用内容&gt;&gt;引用内容 分割线 三个或者三个以上的 - 或者 *,效果一样 12---*** 图片或链接 1234567![图片说明](图片地址 ''title'')[超链接名](超链接地址 "title")title可加可不加如:[百度](http://www.baidu.com)&lt;a href="http://www.baidu.com"&gt;百度&lt;/a&gt;![风景](https://upload-images.jianshu.io/upload_images/703764-605e3cc2ecb664f6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) 百度 列表 无序列表使用*或+或-标识 有序列表使用数字加.标识，例如：1. 表格 短斜杠(数量至少有一个)左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。 1234表头|条目一|条目二:-:|:-:|:-:1|2|34|5|6 表头 条目一 条目二 1 2 3 4 5 6 Html 基本文档 1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;文档标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 可见文本... &lt;/body&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;br&gt; （换行）&lt;/html&gt; 基本元素 粗体文粗体文本 int exgcd(int x, int y, int &amp;a, int &amp;b) { if (y == 0) { return a = 1, b = 0, x; } else { int g = exgcd(y, x % y, b, a); b -= x / y * a; return g; } } 强调文本 斜体文本 键盘输入 预格式化文本 更小的文本 重要的文本 缩写 联系信息 文字方向 从另一个源引用的部分 工作的名称 删除的文本 插入的文本下标文本上标文本本 1234567891011121314151617181920212223242526&lt;b&gt;粗体文本&lt;/b&gt;&lt;code class=&quot;language-cpp&quot;&gt;int exgcd(int x, int y, int &amp;a, int &amp;b) &#123; if (y == 0) &#123; return a = 1, b = 0, x; &#125; else &#123; int g = exgcd(y, x % y, b, a); b -= x / y * a; return g; &#125;&#125;&lt;/code&gt;&lt;em&gt;强调文本&lt;/em&gt;&lt;i&gt;斜体文本&lt;/i&gt;&lt;kbd&gt;键盘输入&lt;/kbd&gt; &lt;pre&gt;预格式化文本&lt;/pre&gt;&lt;small&gt;更小的文本&lt;/small&gt;&lt;strong&gt;重要的文本&lt;/strong&gt;&lt;abbr&gt;缩写&lt;/abbr&gt;&lt;br&gt;&lt;address&gt;联系信息&lt;/address&gt;&lt;bdo&gt;文字方向&lt;/bdo&gt;&lt;blockquote&gt;从另一个源引用的部分&lt;/blockquote&gt;&lt;cite&gt;工作的名称&lt;/cite&gt; &lt;del&gt;删除的文本&lt;/del&gt; &lt;ins&gt;插入的文本&lt;/ins&gt;&lt;sub&gt;下标文本&lt;/sub&gt;&lt;sup&gt;上标文本&lt;/sup&gt;本&lt;/b&gt; 标题 123456&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h3&gt;三级标题&lt;/h3&gt;&lt;h4&gt;四级标题&lt;/h4&gt;&lt;h5&gt;五级标题&lt;/h5&gt;&lt;h6&gt;六级标题&lt;/h6&gt; 列表与表格 Coffee Milk Cola sara &lt;dt&gt;Coffee&lt;/dt&gt;&lt;!--自定义列表项目--&gt;&lt;dd&gt;- Black hot drink&lt;/dd&gt;&lt;!--自定义列表项目--&gt; &lt;dt&gt;Milk&lt;/dt&gt; White cold drink 123456789101112131415161718192021&lt;ul&gt;&lt;!--无序列表--&gt; &lt;li&gt;Coffee&lt;/li&gt;&lt;li&gt;Milk&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;!--有序列表--&gt; &lt;li&gt;Cola&lt;/li&gt;&lt;li&gt;sara&lt;/li&gt;&lt;/ol&gt;&lt;dl&gt;&lt;!--定义列表--&gt; &lt;dt&gt;Coffee&lt;/dt&gt;&lt;!--自定义列表项目--&gt;&lt;dd&gt;- Black hot drink&lt;/dd&gt;&lt;!--自定义列表项目--&gt; &lt;dt&gt;Milk&lt;/dt&gt;&lt;dd&gt;- White cold drink&lt;/dd&gt;&lt;/dl&gt;&lt;table border="1"&gt; &lt;tr&gt; &lt;th&gt;Header 1&lt;/th&gt;&lt;th&gt;Header 2&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 1, cell 1&lt;/td&gt;&lt;td&gt;row 1, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 2, cell 1&lt;/td&gt;&lt;td&gt;row 2, cell 2&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 图片 普通的链接：百度 图像链接： 邮件链接： 发送e-mail 书签： 提示部分 跳到提示部分 #### 框架 document.write("Hello World!") 抱歉，你的浏览器不支持 JavaScript! LaTex 作为一个数学迷，在高中就接触过一点LaTex，而LaTex+几何画板排版的内容一直都是非常精美，不过由于条件限制我一直没能去系统学习，因此现在希望进行一些总结。 由于内容较多将在以后的博文中介绍]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>小知识</tag>
      </tags>
  </entry>
</search>
